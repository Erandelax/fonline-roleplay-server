    

funcdef void EventCallback(Event&);

shared interface IFOnlineFramework
{
	IEventHandler@On(string tag,EventCallback@callback);
	Event@Dispatch(string tag,Event&event=Event());
	Event@Dispatch(string tag,dictionary&event);
}

shared interface IEventHandler
{
	IEventHandler@Shift(IEventHandler@handler);
	IEventHandler@Push(IEventHandler@handler);
	IEventHandler@Dispatch(Event&event);
}

shared class Event{
	dictionary Data;
	Event(dictionary data){this.Data=data;}
	dictionaryValue@opIndex(string id){return this.Data[id];}
}                   

import IFOnlineFramework@get_FOnline()from"fonline"; 

void module_init(){
	Log("Extensive logging module initialization...");
	
	FOnline.On("start",@logStart);
	FOnline.On("init",@logInit);
	FOnline.On("finish",@logFinish);
}

void logStart(Event&){
	Log("start");
}

void logInit(Event&){
	Log("init");
}

void logFinish(Event&){
	Log("finish");
}