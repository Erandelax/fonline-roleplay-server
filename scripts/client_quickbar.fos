/**
 * 	Quickbar client interface extension
 *  @erandelax 23/08/18
 *  @todo индивидуальные настройки для каждого чара
 * 	@todo больше вариантов взаимодействия с айтемами на панели
 */


#ifdef __CLIENT

#include "_macros.fos"
#include "_client_defines.fos"
#include "_colors.fos"
#include "_msgstr.fos"

#define QUICKBAR_FILENAME    "QuickbarItems.txt"

uint[] quickbar = {0};

/*EXPORT*/ void LoadQuickbar()
{
	file f;
	if( f.open(QUICKBAR_FILENAME,"r") >= 0) {
		quickbar.resize(0);	
		uint pos = 0;
		while(not f.isEndOfFile()){
			uint id = uint(f.readUint32());
			quickbar.insertLast(id );
		}
		f.close();
	}
}

void SaveQuickbar(){
	if(quickbar.length > 0){
		file f;
		if( f.open(QUICKBAR_FILENAME,"w") >= 0) for(uint pos = 0; pos < quickbar.length; pos++){
			f.writeUint32( uint32( quickbar[pos] ) );
		}
		f.close();
	}
}

void ResizeQuickbar(uint quick_slot){
	if(quickbar.length <= quick_slot) 
		for(uint pos = quickbar.length;pos<=quick_slot;pos++)
			quickbar.insertLast(0);
}

// Добавить айтем в избранное
/*EXPORT*/ uint quickItemAddCurrent(uint quick_slot){
	ResizeQuickbar(quick_slot);
	CritterCl@ chosen = GetChosen();
	if(chosen is null) return 0;
	ItemCl@ item = chosen.GetItem(0,SLOT_HAND1);
	if(item is null) return 0;
	// Удалить айтем если он и так в руках
	if(quickbar[quick_slot] == item.Id){
		quickbar[quick_slot] = 0;
	} else {
		quickbar[quick_slot] = item.Id;
	}
	SaveQuickbar();
	return item.Id;
}

// Получить айди айтема (для отрисовки иконок)
/*EXPORT*/ ItemCl@ quickItem(uint quick_slot){
	ResizeQuickbar(quick_slot);
	CritterCl@ chosen = GetChosen();
	if(chosen is null) return null;
	return chosen.GetItemById(quickbar[quick_slot]);
}

// Применить айтем из избранного
/*EXPORT*/ void quickItemUse(uint quick_slot, bool forced = false){
	ResizeQuickbar(quick_slot);
	CritterCl@ chosen = GetChosen(); 
	if(chosen !is null){
		ItemCl@ item = chosen.GetItemById(quickbar[quick_slot]);
		ItemCl@ equippedItem = chosen.GetItem(0,SLOT_HAND1);
		if(item !is null){
			if(equippedItem is item){ // Если в слоте и в руках один и тот же предмет
				if(ITEM_TYPE_WEAPON == item.GetType()){ // Для пушек - перейти к выбору цели
					ChangeCursor( CURSOR_USE_WEAPON );
				} else {  // Для айтемов - попробовать использовать на ком-то
					ChangeCursor( CURSOR_USE_ITEM );
				}
			}else{ // В слоте другой предмет
				if( forced ) { // Срочная активация
					if(ITEM_TYPE_WEAPON == item.GetType()){ // Для пушек - бросить что бы ни было в руках и взять в руки пушку
						RunServerScriptUnsafe("critter_item_movement@unsafe_DropCurrentItem",item.Id,0,0,"",null);
						ChangeCursor( CURSOR_USE_WEAPON );
					} else { 
						uint[] use = {CHOSEN_USE_ITEM, item.Id, 0, 0, 0, ITEM_MODE_USE, 0};
						SetChosenActions(use);
					}
				} else { // Обычная активация
					if(ITEM_TYPE_WEAPON == item.GetType()){ // Взять оружие со слота
						uint[] use = {CHOSEN_MOVE_ITEM, quickbar[quick_slot], 1, SLOT_HAND1, 0, 0, 0};
						SetChosenActions(use);
					} else { // Взять предмет со слота
						uint[] use = {CHOSEN_MOVE_ITEM, quickbar[quick_slot], 1, SLOT_HAND1, 0, 0, 0};
						SetChosenActions(use);
					}
				}
			}
		}
	}
}

#endif